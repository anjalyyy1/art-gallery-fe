{"version":3,"sources":["assets/images/background-image-art-gallery.jpeg","pages/artGallery/styles.ts","ts/hooks/index.ts","components/spinner/styles.ts","components/spinner/index.tsx","pages/art/styles.ts","pages/art/index.tsx"],"names":["PageWrapper","styled","div","Banner","CoverImage","BannerText","BannerWrapper","BannerHeading","h2","props","theme","COLOR_PALETTE","WHITE","HelperText","span","Price","ImageWrapper","Image","img","ArtGalleryWrapper","SideBarWrapper","GalleryWrapper","Filters","Loader","useAppDispatch","useDispatch","useAppSelector","useSelector","StyledSpinnerContainer","fontSize","spin","keyframes","StyledSpinner","Spin","className","style","ArtWrapper","ArtImageWrapper","CreatedBy","Description","p","ArtImage","ArtDetails","NotArtFound","Art","dispatch","artId","useParams","state","ArtsReducer","artDetails","isArtLoading","useEffect","getSingleArt","get","Object","keys","length","src"],"mappings":"4nBAAe,MAA0B,0D,QCG5BA,EAAcC,IAAOC,IAAV,0BAEXC,EAASF,IAAOC,IAAV,uHACOE,GAMbC,EAAaJ,IAAOC,IAAV,mDAIVI,EAAgBL,IAAOC,IAAV,gJAQbK,EAAgBN,IAAOO,GAAV,qIAKf,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,cAAcC,SAGjCC,EAAaZ,IAAOa,KAAV,mEAKVC,EAAQd,IAAOa,KAAV,8GAOLE,EAAef,IAAOC,IAAV,qFAMZe,EAAQhB,IAAOiB,IAAV,0GAOLC,EAAoBlB,IAAOC,IAAV,0FAMjBkB,EAAiBnB,IAAOC,IAAV,2CAIdmB,EAAiBpB,IAAOC,IAAV,wCAIdoB,EAAUrB,IAAOC,IAAV,0RAkBPqB,EAAStB,IAAOC,IAAV,8P,iCCzFnB,gFAIasB,EAAiB,kBAAMC,eACvBC,EAAkDC,K,2DCHlDC,EAAyB3B,IAAOC,IAAV,sEAIpB,SAAAO,GAAK,OAChBA,EAAMoB,SACwB,kBAAnBpB,EAAMoB,SAAb,UACKpB,EAAMoB,SADX,MAEEpB,EAAMoB,SACR,UAGFC,EAAOC,YAAH,4IAUGC,EAAgB/B,IAAOC,IAAV,i1BAyBT4B,EAaAA,G,OCxCFG,IAZwB,SAAC,GAAoC,IAAlCJ,EAAiC,EAAjCA,SAAUK,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,MAC7D,OACE,cAACP,EAAD,CACEO,MAAOA,EACPD,UAAWA,EACXL,SAAUA,EAHZ,SAKE,cAACG,EAAD,Q,8ICfOI,EAAanC,IAAOC,IAAV,4GAOVmC,EAAkBpC,IAAOC,IAAV,wFAMfoC,EAAYrC,IAAOO,GAAV,6HAOT+B,EAActC,IAAOuC,EAAV,6FAMXzB,EAAQd,IAAOa,KAAV,sEAKL2B,EAAWxC,IAAOiB,IAAV,mFAMRwB,EAAazC,IAAOC,IAAV,kFAMVyC,EAAc1C,IAAOO,GAAV,4I,OCoBToC,UA3C6B,WAC1C,IAAMC,EAAWrB,cACXsB,EAAQC,cAEd,EAA0CrB,aAAe,SAAAsB,GACvD,MAEIA,EADFC,YAEF,MAAO,CACLC,WAJF,EACiBA,WAIfC,aALF,EAC6BA,iBAF/B,IAAQD,kBAAR,MAAqB,GAArB,EAAyBC,EAAzB,EAAyBA,aAczB,OAJAC,qBAAU,WACRP,EAASQ,YAAaC,IAAIR,EAAD,UACxB,CAACA,EAAOD,IAEPM,EAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAMjB,UAAU,oBADlB,iBAMCqB,OAAOC,KAAKN,GAAYO,OAI3B,eAACrB,EAAD,WACE,cAACC,EAAD,UACE,cAACI,EAAD,CAAUiB,IAAKJ,IAAIJ,EAAD,gBAEpB,eAACR,EAAD,WACE,eAACJ,EAAD,2BAAyBgB,IAAIJ,EAAD,kBAC5B,cAACX,EAAD,UAAce,IAAIJ,EAAD,iBACjB,eAACnC,EAAD,eAASuC,IAAIJ,EAAD,kBAVT,cAACP,EAAD","file":"static/js/4.32c2422c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/background-image-art-gallery.8c7ae251.jpeg\";","import { CoverImage } from 'assets/images';\nimport styled from 'styled-components';\n\nexport const PageWrapper = styled.div``;\n\nexport const Banner = styled.div`\n  background-image: url(${CoverImage});\n  width: 100%;\n  height: 28rem;\n  background-size: cover;\n`;\n\nexport const BannerText = styled.div`\n  position: absolute;\n`;\n\nexport const BannerWrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n`;\n\nexport const BannerHeading = styled.h2`\n  font-weight: bold;\n  margin-bottom: 40px;\n  font-size: 65px;\n  letter-spacing: 5px;\n  color: ${props => props.theme.COLOR_PALETTE.WHITE};\n`;\n\nexport const HelperText = styled.span`\n  font-size: 16px;\n  display: block;\n`;\n\nexport const Price = styled.span`\n  font-size: 20px;\n  font-weight: bold;\n  margin-top: 10px;\n  display: block;\n`;\n\nexport const ImageWrapper = styled.div`\n  width: 50px;\n  height: 50px;\n  margin: 20px auto 0;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: 50%;\n`;\n\nexport const ArtGalleryWrapper = styled.div`\n  display: flex;\n  max-width: 1140px;\n  margin: 50px auto;\n`;\n\nexport const SideBarWrapper = styled.div`\n  width: 25%;\n`;\n\nexport const GalleryWrapper = styled.div`\n  flex: 1;\n`;\n\nexport const Filters = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n\n  .select__control {\n    border-radius: 20px;\n    width: 100%;\n  }\n  .sort-container {\n    width: 150px;\n  }\n\n  .select__value-container {\n    font-size: 13px;\n  }\n`;\n\nexport const Loader = styled.div`\n  display: flex;\n  align-items: center;\n  height: 50%;\n  justify-content: center;\n  width: 100%;\n  min-height: 300px;\n\n  .spinner-wrapper {\n    position: relative;\n    font-size: 16px;\n    margin-right: 25px;\n  }\n`;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from 'redux/reducers';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import styled, { keyframes } from 'styled-components';\n\nexport const StyledSpinnerContainer = styled.div<{\n  fontSize?: number | string;\n}>`\n  position: relative;\n  font-size: ${props =>\n    props.fontSize\n      ? typeof props.fontSize === 'number'\n        ? `${props.fontSize}px`\n        : props.fontSize\n      : '16px'};\n`;\n\nconst spin = keyframes`\n    0% {\n        transform: rotate(0deg);\n    }\n    \n    100% {\n        transform: rotate(360deg);\n    }\n`;\n\nexport const StyledSpinner = styled.div<{\n  fontSize?: number;\n}>`\n  color: transparent;\n  margin: 0 auto;\n  width: 1em;\n  height: 1em;\n  box-shadow: inset 0 0 0 1em;\n  transform: translateZ(0);\n  border-radius: 50%;\n  :after,\n  :before {\n    border-radius: 50%;\n    position: absolute;\n    content: '';\n  }\n  :before {\n    width: 0.5em;\n    height: 1em;\n    /* color to change */\n    background: inherit;\n    border-radius: 0 1em 1em 0;\n    top: 0;\n    left: 0.5em;\n    transform-origin: 0 0.5em;\n    animation: ${spin} 1s infinite ease;\n  }\n  :after {\n    width: 0.5em;\n    height: 1em;\n    /* color to change */\n    border: calc(0.1 * 1em) solid #1657cd;\n    border-right-color: transparent;\n    top: 0;\n    left: 0;\n    box-sizing: border-box;\n    border-radius: 1em 0 0 1em;\n    transform-origin: 0.5em 0.5em;\n    animation: ${spin} 1s infinite ease;\n  }\n`;\n","import { FunctionComponent } from 'react';\nimport { StyledSpinnerContainer, StyledSpinner } from './styles';\nimport { GenericObject } from 'ts/types';\n\ntype Props = {\n  fontSize?: number | string;\n  className?: string;\n  style?: GenericObject;\n};\n\nconst Spin: FunctionComponent<Props> = ({ fontSize, className, style }) => {\n  return (\n    <StyledSpinnerContainer\n      style={style}\n      className={className}\n      fontSize={fontSize}\n    >\n      <StyledSpinner />\n    </StyledSpinnerContainer>\n  );\n};\n\nexport default Spin;\n","import styled from 'styled-components';\n\nexport const ArtWrapper = styled.div`\n  margin-top: 20px;\n  max-width: 1440px;\n  margin: 0 auto;\n  display: flex;\n`;\n\nexport const ArtImageWrapper = styled.div`\n  width: 500px;\n  height: 400px;\n  margin: 50px 100px 0;\n`;\n\nexport const CreatedBy = styled.h2`\n  font-weight: bold;\n  font-size: 30px;\n  margin-bottom: 20px;\n  text-decoration: underline;\n`;\n\nexport const Description = styled.p`\n  font-size: 16px;\n  margin-bottom: 50px;\n  line-height: 1.2;\n`;\n\nexport const Price = styled.span`\n  font-size: 26px;\n  font-weight: bold;\n`;\n\nexport const ArtImage = styled.img`\n  width: 100%;\n  height: auto;\n  object-fit: cover;\n`;\n\nexport const ArtDetails = styled.div`\n  max-width: 500px;\n  flex: 1;\n  margin-top: 50px;\n`;\n\nexport const NotArtFound = styled.h2`\n  font-size: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 100px;\n`;\n","import Spin from 'components/spinner';\nimport get from 'lodash/get';\nimport { Loader } from 'pages/artGallery/styles';\nimport React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getSingleArt } from 'store/actions/artsActions';\nimport { useAppDispatch, useAppSelector } from 'ts/hooks';\nimport {\n  ArtDetails,\n  ArtImage,\n  ArtImageWrapper,\n  ArtWrapper,\n  CreatedBy,\n  Description,\n  NotArtFound,\n  Price,\n} from './styles';\n\ntype Props = {\n  artistsData: any[];\n};\n\nconst Art: React.FunctionComponent<Props> = () => {\n  const dispatch = useAppDispatch();\n  const artId = useParams();\n\n  const { artDetails = {}, isArtLoading } = useAppSelector(state => {\n    const {\n      ArtsReducer: { artDetails, isArtLoading },\n    } = state;\n    return {\n      artDetails,\n      isArtLoading,\n    };\n  });\n\n  useEffect(() => {\n    dispatch(getSingleArt(get(artId, `id`)));\n  }, [artId, dispatch]);\n\n  if (isArtLoading) {\n    return (\n      <Loader>\n        <Spin className=\"spinner-wrapper\" /> Loading...\n      </Loader>\n    );\n  }\n\n  if (!Object.keys(artDetails).length) {\n    return <NotArtFound>Art Not Found!!</NotArtFound>;\n  }\n  return (\n    <ArtWrapper>\n      <ArtImageWrapper>\n        <ArtImage src={get(artDetails, `imageUrl`)} />\n      </ArtImageWrapper>\n      <ArtDetails>\n        <CreatedBy>Created By - {get(artDetails, `artist.name`)}</CreatedBy>\n        <Description>{get(artDetails, `description`)}</Description>\n        <Price>${get(artDetails, `price`)}</Price>\n      </ArtDetails>\n    </ArtWrapper>\n  );\n};\n\nexport default Art;\n"],"sourceRoot":""}