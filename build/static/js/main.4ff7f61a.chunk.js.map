{"version":3,"sources":["components/header/styles.ts","components/header/index.tsx","components/layout/index.tsx","routes/config.tsx","routes/index.tsx","App.tsx","styles/globalStyles.ts","styles/themes.ts","redux/createReducer.ts","store/reducers/artistReducer.ts","store/reducers/artsReducer.ts","redux/reducers.ts","services/api/index.ts","utils/notification.ts","store/sagas/artistSaga.ts","store/sagas/artSaga.ts","store/sagas/index.ts","redux/createStore.ts","allProvider.tsx","index.tsx","store/actions/artsActions.ts","store/types/artTypes.ts","store/types/artistTypes.ts","store/actions/artistActions.ts"],"names":["AppLogo","styled","h1","props","theme","COLOR_PALETTE","WHITE","HeaderWrapper","header","Container","div","COLOR","PRIMARY_COLOR","NavWrapper","nav","NavOptions","ul","NavItem","li","navOptions","key","label","link","Header","to","map","eachLink","index","Layout","children","routes","path","exact","component","lazy","Routes","fallback","route","App","GlobalStyle","createGlobalStyle","SECONDARY_COLOR","BLACK","createReducer","initialState","actionMap","state","action","has","type","actionWithoutType","omit","ArtistReducer","artists","ArtistTypes","ArtReducer","arts","ArtTypes","rootReducer","combineReducers","ArtsReducer","handleResponse","response","error","success","data","get","baseUrl","getData","url","a","apiUrl","axios","this","process","handleNotification","options","Swal","fire","icon","toast","position","showConfirmButton","timer","handleApiToast","title","isSuccess","text","getArtists","artistsWatcher","FetchUtils","Notification","put","setArtists","takeLatest","GET_ARTISTS","getArts","getSingleArt","sort","status","statusParam","setArts","artId","setArtDetails","GET_ARTS","GET_ART","rootSaga","all","fork","artistSaga","artSaga","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","AllProvider","ReactDOM","render","StrictMode","document","getElementById","SET_ART","artDetails","SET_ART_DETAILS","SET_ARTISTS"],"mappings":"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","file":"static/js/main.4ff7f61a.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const AppLogo = styled.h1`\n  a {\n    font-size: 30px;\n    font-weight: 700;\n    color: ${props => props.theme.COLOR_PALETTE.WHITE};\n    text-decoration: none;\n  }\n`;\n\nexport const HeaderWrapper = styled.header`\n  padding: 20px;\n  display: flex;\n  justify-content: space-between;\n  max-width: 1440px;\n  margin: 0 auto;\n`;\n\nexport const Container = styled.div`\n  background-color: ${props => props.theme.COLOR.PRIMARY_COLOR};\n`;\n\nexport const NavWrapper = styled.nav`\n  width: 30%;\n  display: flex;\n`;\n\nexport const NavOptions = styled.ul`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const NavItem = styled.li`\n  a {\n    text-decoration: none;\n    font-size: 20px;\n    color: ${props => props.theme.COLOR_PALETTE.WHITE};\n    font-weight: bold;\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport {\n  AppLogo,\n  HeaderWrapper,\n  Container,\n  NavOptions,\n  NavWrapper,\n  NavItem,\n} from './styles';\n\nconst navOptions = [\n  {\n    key: 'about',\n    label: 'About',\n    link: '/about',\n  },\n  {\n    key: 'services',\n    label: 'Services',\n    link: '/service',\n  },\n  {\n    key: 'contact',\n    label: 'Contact',\n    link: '/contact',\n  },\n];\n\nconst Header = () => {\n  return (\n    <Container>\n      <HeaderWrapper>\n        <AppLogo>\n          <Link to=\"art-gallery\">Art Gallery</Link>\n        </AppLogo>\n        <NavWrapper>\n          <NavOptions>\n            {navOptions.map((eachLink, index) => {\n              return (\n                <NavItem key={index}>\n                  <Link to={eachLink.link}>{eachLink.label}</Link>\n                </NavItem>\n              );\n            })}\n          </NavOptions>\n        </NavWrapper>\n      </HeaderWrapper>\n    </Container>\n  );\n};\n\nexport default Header;\n","import Header from 'components/header';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nconst Layout: React.FunctionComponent<Props> = ({ children }) => {\n  return (\n    <>\n      <Header />\n      {children}\n    </>\n  );\n};\n\nexport default Layout;\n","/* eslint-disable react/display-name */\nimport { lazy } from 'react';\n\ntype RouteConfig = {\n  path?: string;\n  exact?: boolean;\n  component?: any;\n  title?: string;\n  renderComponent?: any;\n};\n\nconst routes: RouteConfig[] = [\n  {\n    path: '/arts',\n    exact: true,\n    component: lazy(() => import('pages/artGallery')),\n  },\n  {\n    path: '/arts/:id',\n    exact: true,\n    component: lazy(() => import('pages/art')),\n  },\n];\n\nexport { routes };\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Suspense } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport { routes } from './config';\n\nconst Routes = () => {\n  return (\n    <Router>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Switch>\n          {routes.map((route, index) => {\n            return <Route key={index} exact={true} {...route} />;\n          })}\n          <Redirect to=\"/arts\" />\n        </Switch>\n      </Suspense>\n    </Router>\n  );\n};\n\nexport default Routes;\n","import Layout from 'components/layout';\nimport Routes from 'routes';\n\nfunction App() {\n  return (\n    <Layout>\n      <Routes />\n    </Layout>\n  );\n}\n\nexport default App;\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 16px;\n\tfont: inherit;\n    vertical-align: baseline;\n    \n}\n\n::-webkit-scrollbar {\n    width: 3px;\n    height:3px;\n}\n::-webkit-scrollbar-track { box-shadow: none;}\n::-webkit-scrollbar-thumb {\n    background-color: darkgrey;\n    outline: none;\n    border-radius: 10px;\n}\n\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n    margin: 0;\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n    \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", \"Circular Std Bold\",\n    sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n* {\n\tbox-sizing: border-box;\n}\n\n.slick-slider\n{\n    position: relative;\n\n    display: block;\n    box-sizing: border-box;\n\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n\n    -webkit-touch-callout: none;\n    -khtml-user-select: none;\n    -ms-touch-action: pan-y;\n        touch-action: pan-y;\n    -webkit-tap-highlight-color: transparent;\n}\n\n.slick-list\n{\n    position: relative;\n\n    display: block;\n    overflow: hidden;\n\n    margin: 0;\n    padding: 0;\n}\n.slick-list:focus\n{\n    outline: none;\n}\n.slick-list.dragging\n{\n    cursor: pointer;\n    cursor: hand;\n}\n\n.slick-slider .slick-track,\n.slick-slider .slick-list\n{\n    -webkit-transform: translate3d(0, 0, 0);\n       -moz-transform: translate3d(0, 0, 0);\n        -ms-transform: translate3d(0, 0, 0);\n         -o-transform: translate3d(0, 0, 0);\n            transform: translate3d(0, 0, 0);\n}\n\n.slick-track\n{\n    position: relative;\n    top: 0;\n    left: 0;\n\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n}\n.slick-track:before,\n.slick-track:after\n{\n    display: table;\n\n    content: '';\n}\n.slick-track:after\n{\n    clear: both;\n}\n.slick-loading .slick-track\n{\n    visibility: hidden;\n}\n\n.slick-slide\n{\n    display: none;\n    float: left;\n\n    height: 100%;\n    min-height: 1px;\n}\n[dir='rtl'] .slick-slide\n{\n    float: right;\n}\n.slick-slide img\n{\n    display: block;\n}\n.slick-slide.slick-loading img\n{\n    display: none;\n}\n.slick-slide.dragging img\n{\n    pointer-events: none;\n}\n.slick-initialized .slick-slide\n{\n    display: block;\n}\n.slick-loading .slick-slide\n{\n    visibility: hidden;\n}\n.slick-vertical .slick-slide\n{\n    display: block;\n\n    height: auto;\n\n    border: 1px solid transparent;\n}\n.slick-arrow.slick-hidden {\n    display: none;\n}\n/* Slider */\n.slick-loading .slick-list\n{\n    background: #fff url('./ajax-loader.gif') center center no-repeat;\n}\n\n/* Icons */\n@font-face\n{\n    font-family: 'slick';\n    font-weight: normal;\n    font-style: normal;\n\n    src: url('./fonts/slick.eot');\n    src: url('./fonts/slick.eot?#iefix') format('embedded-opentype'), url('./fonts/slick.woff') format('woff'), url('./fonts/slick.ttf') format('truetype'), url('./fonts/slick.svg#slick') format('svg');\n}\n/* Arrows */\n.slick-prev,\n.slick-next\n{\n    font-size: 0;\n    line-height: 0;\n\n    position: absolute;\n    top: 50%;\n\n    display: block;\n\n    width: 20px;\n    height: 20px;\n    padding: 0;\n    -webkit-transform: translate(0, -50%);\n    -ms-transform: translate(0, -50%);\n    transform: translate(0, -50%);\n\n    cursor: pointer;\n\n    color: transparent;\n    border: none;\n    outline: none;\n    background: transparent;\n}\n.slick-prev:hover,\n.slick-prev:focus,\n.slick-next:hover,\n.slick-next:focus\n{\n    color: transparent;\n    outline: none;\n    background: transparent;\n}\n.slick-prev:hover:before,\n.slick-prev:focus:before,\n.slick-next:hover:before,\n.slick-next:focus:before\n{\n    opacity: 1;\n}\n.slick-prev.slick-disabled:before,\n.slick-next.slick-disabled:before\n{\n    opacity: .25;\n}\n\n.slick-prev:before,\n.slick-next:before\n{\n    font-family: 'slick';\n    font-size: 20px;\n    line-height: 1;\n\n    opacity: .75;\n    color: black;\n\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n}\n\n.slick-prev\n{\n    left: -25px;\n}\n[dir='rtl'] .slick-prev\n{\n    right: -25px;\n    left: auto;\n}\n.slick-prev:before\n{\n    position: absolute;\n    top: 0;\n    right: -12px;\n    content: '←';\n}\n[dir='rtl'] .slick-prev:before\n{\n    content: '→';\n}\n\n.slick-next\n{\n    right: -25px;\n}\n[dir='rtl'] .slick-next\n{\n    right: auto;\n    left: -25px;\n}\n.slick-next:before\n{\n    content: '→';\n    position: absolute;\n    top: 0;\n    right: 12px;\n    \n}\n[dir='rtl'] .slick-next:before\n{\n    content: '←';\n}\n\n/* Dots */\n.slick-dotted.slick-slider\n{\n    margin-bottom: 30px;\n}\n\n.slick-dots\n{\n    position: absolute;\n    bottom: -25px;\n\n    display: block;\n\n    width: 100%;\n    padding: 0;\n    margin: 0;\n\n    list-style: none;\n\n    text-align: center;\n}\n.slick-dots li\n{\n    position: relative;\n\n    display: inline-block;\n\n    width: 20px;\n    height: 20px;\n    margin: 0 5px;\n    padding: 0;\n\n    cursor: pointer;\n}\n.slick-dots li button\n{\n    font-size: 0;\n    line-height: 0;\n\n    display: block;\n\n    width: 20px;\n    height: 20px;\n    padding: 5px;\n\n    cursor: pointer;\n\n    color: transparent;\n    border: 0;\n    outline: none;\n    background: transparent;\n}\n.slick-dots li button:hover,\n.slick-dots li button:focus\n{\n    outline: none;\n}\n.slick-dots li button:hover:before,\n.slick-dots li button:focus:before\n{\n    opacity: 1;\n}\n.slick-dots li button:before\n{\n    font-family: 'slick';\n    font-size: 30px;\n    line-height: 20px;\n\n    position: absolute;\n    top: 0;\n    left: 0;\n\n    width: 20px;\n    height: 20px;\n\n    content: '•';\n    text-align: center;\n\n    opacity: .25;\n    color: black;\n\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n}\n.slick-dots li.slick-active button:before\n{\n    opacity: .75;\n    color: black;\n}\n\n`;\n\nexport default GlobalStyle;\n","const theme = {\n  COLOR: {\n    PRIMARY_COLOR: '#1657CD',\n    SECONDARY_COLOR: '#dededf',\n  },\n  COLOR_PALETTE: {\n    WHITE: '#fff',\n    BLACK: '#000',\n  },\n};\n\nexport default theme;\n","import { ActionType } from 'ts/types';\nimport has from 'lodash/has';\nimport omit from 'lodash/omit';\n\ntype actionMapType = {\n  [key: string]: any;\n};\n\nconst createReducer = (initialState = {}, actionMap: actionMapType) => {\n  return (state = initialState, action: ActionType) => {\n    if (has(actionMap, action.type)) {\n      // pass just the payload and not type\n      const actionWithoutType = omit(action, ['type']);\n\n      if (typeof actionMap[action.type] === 'function') {\n        return actionMap[action.type](state, actionWithoutType);\n      } else if (typeof actionMap[action.type] === 'string') {\n        return { ...state, ...actionWithoutType };\n      }\n    }\n    return state;\n  };\n};\n\nexport default createReducer;\n","import { ArtistTypes } from 'store/types';\nimport createReducer from 'redux/createReducer';\n\ntype ReducerType = {\n  artists: any[];\n};\n\nconst initialState: ReducerType = {\n  artists: [],\n};\n\nconst ArtistReducer = createReducer(initialState, {\n  ...ArtistTypes,\n});\n\nexport default ArtistReducer;\n","import { ArtTypes } from 'store/types';\nimport createReducer from 'redux/createReducer';\n\ntype ReducerType = {\n  arts: any[];\n};\n\nconst initialState: ReducerType = {\n  arts: [],\n};\n\nconst ArtReducer = createReducer(initialState, {\n  ...ArtTypes,\n});\n\nexport default ArtReducer;\n","import { combineReducers } from 'redux';\nimport ArtistReducer from 'store/reducers/artistReducer';\nimport ArtsReducer from 'store/reducers/artsReducer';\n\nimport { store } from './createStore';\n\nconst rootReducer = combineReducers({\n  ArtsReducer,\n  ArtistReducer,\n});\n\nexport default rootReducer;\n\nexport type RootState = ReturnType<typeof rootReducer>;\nexport type AppDispatch = typeof store.dispatch;\n","import axios from 'axios';\nimport get from 'lodash/get';\n\n// formatting response\nconst handleResponse = ({ response, error }: any) => {\n  let formattedResponse = {};\n  if (error) {\n    return (formattedResponse = {\n      error: error || 'Error',\n      success: false,\n    });\n  }\n\n  formattedResponse = {\n    data: get(response, `data.data`, []),\n    success: true,\n  };\n\n  return formattedResponse;\n};\n\nclass FetchUtils {\n  baseUrl: string;\n\n  constructor() {\n    this.baseUrl = `${process.env.REACT_APP_BASE_URL}`;\n  }\n\n  // get request\n  getData = async (url: string) => {\n    const apiUrl = `${this.baseUrl}${url}`;\n\n    try {\n      const response = await axios.get(apiUrl);\n      return handleResponse({ response });\n    } catch (error) {\n      return handleResponse({ error });\n    }\n  };\n}\n\nexport default new FetchUtils();\n","import Swal from 'sweetalert2';\n\nclass Notification {\n  handleNotification = (options: any) => {\n    Swal.fire({\n      icon: 'info',\n      toast: true,\n      position: 'top',\n      showConfirmButton: false,\n      timer: 3000,\n      ...options,\n    });\n  };\n\n  handleApiToast = ({ title, isSuccess, text }: any) => {\n    this.handleNotification({\n      position: 'top-end',\n      icon: isSuccess ? 'success' : 'error',\n      title,\n      text,\n    });\n  };\n}\n\nexport default new Notification();\n","// libraries\nimport { put, takeLatest } from 'redux-saga/effects';\nimport get from 'lodash/get';\n\n// utils\nimport FetchUtils from 'services/api';\nimport Notification from 'utils/notification';\n\n// actions & types\nimport { ArtistTypes } from 'store/types';\n\nimport { setArtists } from 'store/actions/artistActions';\n\nfunction* getArtists(): any {\n  // show loader only the first\n  const response = yield FetchUtils.getData('artist');\n\n  if (!get(response, 'success')) {\n    return Notification.handleApiToast({\n      title: get(response, 'error') || 'Error fetching artists.',\n    });\n  }\n  yield put(setArtists(get(response, 'data.artists')));\n}\n\nfunction* artistsWatcher() {\n  yield takeLatest(ArtistTypes.GET_ARTISTS, getArtists);\n}\n\nexport default artistsWatcher;\n","// libraries\nimport { put, takeLatest } from 'redux-saga/effects';\nimport get from 'lodash/get';\n\n// utils\nimport FetchUtils from 'services/api';\nimport Notification from 'utils/notification';\n\n// actions & types\nimport { ArtTypes } from 'store/types';\n\nimport { setArts, setArtDetails } from 'store/actions/artsActions';\n\nfunction* getArts({ sort, status }: any): any {\n  let statusParam = '';\n\n  if (status) {\n    statusParam = `&status=${status}`;\n  }\n  const response = yield FetchUtils.getData(`art?sort=${sort}${statusParam}`);\n\n  if (!get(response, 'success')) {\n    return Notification.handleApiToast({\n      title: get(response, 'error') || 'Error fetching arts.',\n    });\n  }\n  yield put(setArts(get(response, 'data.arts')));\n}\n\nfunction* getSingleArt({ artId }: any): any {\n  const response = yield FetchUtils.getData(`art/${artId}`);\n\n  if (!get(response, 'success')) {\n    return Notification.handleApiToast({\n      title: get(response, 'error') || 'Error fetching art.',\n    });\n  }\n  yield put(setArtDetails(get(response, 'data.art')));\n}\n\nfunction* artistsWatcher() {\n  yield takeLatest(ArtTypes.GET_ARTS, getArts);\n  yield takeLatest(ArtTypes.GET_ART, getSingleArt);\n}\n\nexport default artistsWatcher;\n","import { all, fork } from 'redux-saga/effects';\n\nimport artistSaga from './artistSaga';\nimport artSaga from './artSaga';\n\nconst rootSaga = function* () {\n  yield all([fork(artistSaga), fork(artSaga)]);\n};\n\nexport default rootSaga;\n","import createSagaMiddleware from 'redux-saga';\nimport rootReducer from './reducers';\nimport rootSaga from 'store/sagas/index';\nimport { applyMiddleware, createStore } from 'redux';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\n\nsagaMiddleware.run(rootSaga);\n\nexport { store };\n","import App from './App';\nimport GlobalStyle from 'styles/globalStyles';\nimport { ThemeProvider } from 'styled-components';\nimport theme from 'styles/themes';\nimport { FunctionComponent } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { store } from 'redux/createStore';\nimport { Provider } from 'react-redux';\n\nconst AllProvider: FunctionComponent = () => {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <ThemeProvider theme={theme}>\n          <GlobalStyle />\n          <App />\n        </ThemeProvider>\n      </BrowserRouter>\n    </Provider>\n  );\n};\n\nexport default AllProvider;\n","import AllProvider from 'allProvider';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AllProvider />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import { ActionType } from 'ts/types';\nimport { ArtTypes } from 'store/types';\n\nexport const getArts = (sort: string, status: string | null): ActionType => ({\n  type: ArtTypes.GET_ARTS,\n  sort,\n  status,\n});\n\nexport const getSingleArt = (artId: string): ActionType => ({\n  type: ArtTypes.GET_ART,\n  artId,\n});\n\nexport const setArts = (arts: any[]): ActionType => ({\n  type: ArtTypes.SET_ART,\n  arts,\n});\n\nexport const setArtDetails = (artDetails: any): ActionType => ({\n  type: ArtTypes.SET_ART_DETAILS,\n  artDetails,\n});\n","const GET_ARTS = 'GET_ARTS';\nconst GET_ART = 'GET_ART';\nconst SET_ART = 'SET_ART';\nconst SET_ART_DETAILS = 'SET_ART_DETAILS';\n\nexport const ArtTypes = {\n  GET_ART,\n  GET_ARTS,\n  SET_ART,\n  SET_ART_DETAILS,\n};\n","const GET_ARTISTS = 'GET_ARTISTS';\nconst SET_ARTISTS = 'SET_ARTISTS';\n\nexport const ArtistTypes = {\n  GET_ARTISTS,\n  SET_ARTISTS,\n};\n","import { ActionType } from 'ts/types';\nimport { ArtistTypes } from 'store/types';\n\nexport const getArtists = (): ActionType => ({\n  type: ArtistTypes.GET_ARTISTS,\n});\n\nexport const setArtists = (artists: any[]): ActionType => ({\n  type: ArtistTypes.SET_ARTISTS,\n  artists,\n});\n"],"sourceRoot":""}