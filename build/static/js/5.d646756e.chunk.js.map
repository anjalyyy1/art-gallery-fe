{"version":3,"sources":["assets/images/background-image-art-gallery.jpeg","pages/artGallery/styles.ts","ts/hooks/index.ts","components/spinner/styles.ts","components/spinner/index.tsx","elements/dropdown/styles.ts","elements/dropdown/index.tsx","elements/input/styles.ts","elements/input/index.tsx","pages/artGallery/components/artistsSideBar/styles.ts","pages/artGallery/components/artistsSideBar/index.tsx","pages/artGallery/components/filter/styles.ts","pages/artGallery/components/filter/index.tsx","pages/artGallery/components/gallery/styles.ts","pages/artGallery/components/gallery/index.tsx","pages/artGallery/index.tsx"],"names":["PageWrapper","styled","div","Banner","CoverImage","BannerText","BannerWrapper","BannerHeading","h2","props","theme","COLOR_PALETTE","WHITE","HelperText","span","Price","ImageWrapper","Image","img","ArtGalleryWrapper","SideBarWrapper","GalleryWrapper","Filters","Loader","useAppDispatch","useDispatch","useAppSelector","useSelector","StyledSpinnerContainer","fontSize","spin","keyframes","StyledSpinner","Spin","className","style","SelectContainer","Dropdown","selectedOption","handleChange","options","multiple","placeholder","isClearable","customProps","disabled","label","required","value","onChange","isMulti","menuPlacement","classNamePrefix","isDisabled","defaultProps","StyledInput","input","COLOR","SECONDARY_COLOR","Label","InputWrapper","Input","inputType","val","refVal","defaultValue","inputLabel","icon","type","ref","ArtistSideBarWrapper","Creator","CreatorImageWrapper","CreatorImage","CreatorName","Heading","h4","NoDataText","ArtistSideBar","artistsData","isArtistLoading","useState","setValue","filteredData","filter","eachArtist","toLower","name","includes","length","e","target","map","eachItem","src","imageUrl","get","_id","FilterWrapper","FilterItem","isActive","filterOptions","key","Filter","filterHandler","activeTab","eachOption","index","onClick","ul","ArtWrapper","li","ArtLink","Link","GalleryImageWrapper","GalleryImage","ArtName","Details","Status","RED","Gallery","artGalleryData","to","status","ArtGallery","setStatus","sortBy","setSortBy","dispatch","state","ArtsReducer","arts","isArtLoading","ArtistReducer","artists","useEffect","getArtists","fetchArts","useCallback","filterBy","sort","getArts","isSearchable","styles","control","display","border","option","provided"],"mappings":"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","file":"static/js/5.d646756e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/background-image-art-gallery.8c7ae251.jpeg\";","import { CoverImage } from 'assets/images';\nimport styled from 'styled-components';\n\nexport const PageWrapper = styled.div``;\n\nexport const Banner = styled.div`\n  background-image: url(${CoverImage});\n  width: 100%;\n  height: 28rem;\n  background-size: cover;\n`;\n\nexport const BannerText = styled.div`\n  position: absolute;\n`;\n\nexport const BannerWrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n`;\n\nexport const BannerHeading = styled.h2`\n  font-weight: bold;\n  margin-bottom: 40px;\n  font-size: 65px;\n  letter-spacing: 5px;\n  color: ${props => props.theme.COLOR_PALETTE.WHITE};\n`;\n\nexport const HelperText = styled.span`\n  font-size: 16px;\n  display: block;\n`;\n\nexport const Price = styled.span`\n  font-size: 20px;\n  font-weight: bold;\n  margin-top: 10px;\n  display: block;\n`;\n\nexport const ImageWrapper = styled.div`\n  width: 50px;\n  height: 50px;\n  margin: 20px auto 0;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: 50%;\n`;\n\nexport const ArtGalleryWrapper = styled.div`\n  display: flex;\n  max-width: 1140px;\n  margin: 50px auto;\n`;\n\nexport const SideBarWrapper = styled.div`\n  width: 25%;\n`;\n\nexport const GalleryWrapper = styled.div`\n  flex: 1;\n`;\n\nexport const Filters = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n\n  .select__control {\n    border-radius: 20px;\n    width: 100%;\n  }\n  .sort-container {\n    width: 150px;\n  }\n\n  .select__value-container {\n    font-size: 13px;\n  }\n`;\n\nexport const Loader = styled.div`\n  display: flex;\n  align-items: center;\n  height: 50%;\n  justify-content: center;\n  width: 100%;\n  min-height: 300px;\n\n  .spinner-wrapper {\n    position: relative;\n    font-size: 16px;\n    margin-right: 25px;\n  }\n`;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from 'redux/reducers';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import styled, { keyframes } from 'styled-components';\n\nexport const StyledSpinnerContainer = styled.div<{\n  fontSize?: number | string;\n}>`\n  position: relative;\n  font-size: ${props =>\n    props.fontSize\n      ? typeof props.fontSize === 'number'\n        ? `${props.fontSize}px`\n        : props.fontSize\n      : '16px'};\n`;\n\nconst spin = keyframes`\n    0% {\n        transform: rotate(0deg);\n    }\n    \n    100% {\n        transform: rotate(360deg);\n    }\n`;\n\nexport const StyledSpinner = styled.div<{\n  fontSize?: number;\n}>`\n  color: transparent;\n  margin: 0 auto;\n  width: 1em;\n  height: 1em;\n  box-shadow: inset 0 0 0 1em;\n  transform: translateZ(0);\n  border-radius: 50%;\n  :after,\n  :before {\n    border-radius: 50%;\n    position: absolute;\n    content: '';\n  }\n  :before {\n    width: 0.5em;\n    height: 1em;\n    /* color to change */\n    background: inherit;\n    border-radius: 0 1em 1em 0;\n    top: 0;\n    left: 0.5em;\n    transform-origin: 0 0.5em;\n    animation: ${spin} 1s infinite ease;\n  }\n  :after {\n    width: 0.5em;\n    height: 1em;\n    /* color to change */\n    border: calc(0.1 * 1em) solid #1657cd;\n    border-right-color: transparent;\n    top: 0;\n    left: 0;\n    box-sizing: border-box;\n    border-radius: 1em 0 0 1em;\n    transform-origin: 0.5em 0.5em;\n    animation: ${spin} 1s infinite ease;\n  }\n`;\n","import { FunctionComponent } from 'react';\nimport { StyledSpinnerContainer, StyledSpinner } from './styles';\nimport { GenericObject } from 'ts/types';\n\ntype Props = {\n  fontSize?: number | string;\n  className?: string;\n  style?: GenericObject;\n};\n\nconst Spin: FunctionComponent<Props> = ({ fontSize, className, style }) => {\n  return (\n    <StyledSpinnerContainer\n      style={style}\n      className={className}\n      fontSize={fontSize}\n    >\n      <StyledSpinner />\n    </StyledSpinnerContainer>\n  );\n};\n\nexport default Spin;\n","import styled from 'styled-components';\n\nconst SelectContainer = styled.div`\n  width: 100%;\n  cursor: pointer;\n  &.color-code-select-input,\n  &.gradient-select-input {\n    .select__control {\n      border-color: transparent;\n      font-size: 12px;\n      min-height: auto;\n    }\n    .select__control--is-focused {\n      border-color: transparent;\n      box-shadow: none;\n    }\n    .select__value-container {\n      padding: 0 2px;\n    }\n    .select__menu {\n      .select__option {\n        font-size: 12px;\n      }\n    }\n    .select__indicator {\n      padding: 2px;\n      svg {\n        height: 15px;\n        width: 15px;\n      }\n    }\n    .custom-select {\n      height: 25px;\n      span {\n        display: none;\n      }\n    }\n  }\n  &.gradient-select-input {\n    width: 170px;\n    margin-bottom: 10px;\n  }\n  &.font-weight-selector {\n    .select__indicator-separator {\n      width: 0;\n    }\n  }\n`;\n\nexport { SelectContainer };\n","import { SelectContainer } from './styles';\nimport { ActionMeta, default as ReactSelect } from 'react-select';\nimport React, { FunctionComponent } from 'react';\nimport { GenericObject } from 'ts/types';\n\ntype option = {\n  label: string;\n  value: string;\n};\n\ntype Props = {\n  /**\n   * handles change event\n   */\n  handleChange?: (value: any, actionMeta: ActionMeta<option>) => void;\n  /**\n   * select list option with the key value pair of label and value --> { label: string, value: string }\n   */\n  options: option[];\n  /**\n   *  selected option from the dropdown\n   */\n  selectedOption?: option | option[];\n  /**\n   *  states whether the user will be able to select multiple values\n   */\n  multiple?: boolean;\n  /**\n   * Placeholder to be rendered\n   */\n  placeholder?: string;\n  /**\n   * classname for the dropdown\n   */\n  className?: string;\n  /**\n   * whether the selected option should be clearable or not\n   */\n  isClearable?: boolean;\n  /**\n   * Customisable options\n   */\n  customProps?: GenericObject;\n\n  disabled?: boolean;\n  /**\n   * Label for the dropdown\n   */\n  label?: string;\n  /**\n   * Whether field is required\n   */\n  required?: boolean;\n};\n\nconst Dropdown: FunctionComponent<Props> = ({\n  selectedOption,\n  handleChange,\n  options,\n  multiple,\n  placeholder,\n  className,\n  isClearable,\n  customProps,\n  disabled,\n  label,\n  required,\n}) => {\n  return (\n    <SelectContainer className={className}>\n      {!!label && (\n        <label>\n          {label}\n          {required && <span className=\"required-mark\">*</span>}\n        </label>\n      )}\n      <ReactSelect\n        className=\"custom-select\"\n        value={selectedOption}\n        onChange={handleChange}\n        options={options}\n        isMulti={multiple}\n        menuPlacement={'auto'}\n        placeholder={placeholder}\n        classNamePrefix=\"select\"\n        isClearable={isClearable}\n        isDisabled={disabled}\n        {...customProps}\n      />\n    </SelectContainer>\n  );\n};\n\nDropdown.defaultProps = {\n  multiple: false,\n  placeholder: '',\n  className: '',\n  isClearable: true,\n  customProps: {},\n};\n\nexport default Dropdown;\n","import styled from 'styled-components';\n\nconst StyledInput = styled.input<{\n  showArrows?: boolean;\n}>`\n  padding: 8px 4px;\n  background: ${props => props.theme.COLOR_PALETTE.WHITE};\n  border: 1px solid grey;\n\n  &:focus {\n    outline: none;\n    border-bottom: 1px solid ${props => props.theme.COLOR.SECONDARY_COLOR};\n  }\n`;\n\nconst Label = styled.label``;\n\nconst RequiredMark = styled.span``;\n\nconst InputWrapper = styled.div``;\n\nexport { StyledInput, Label, RequiredMark, InputWrapper };\n","import { StyledInput, Label, InputWrapper } from './styles';\nimport React, { FunctionComponent } from 'react';\n\ntype Props = {\n  className?: string;\n  /**\n   * type of input\n   */\n  inputType?: string;\n  /**\n   * value of input\n   */\n  val?: any;\n  /**\n   * handles change event\n   */\n  handleChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  /**\n   * placeholder text\n   */\n  placeholder?: string;\n  /**\n   * Ref for the input\n   */\n  refVal?: React.RefObject<HTMLInputElement>;\n  /**\n   * default value for the input field\n   */\n  defaultValue?: string;\n  /**\n   * label for the input\n   */\n  inputLabel?: string;\n  // icon\n  icon?: any;\n};\n\nconst Input: FunctionComponent<Props> = ({\n  inputType,\n  val,\n  handleChange,\n  placeholder,\n  refVal,\n  defaultValue,\n  inputLabel,\n  className,\n  icon,\n}) => {\n  return (\n    <InputWrapper className=\"input-wrapper\">\n      {!!inputLabel && <Label>{inputLabel}</Label>}\n      {!!icon && icon}\n      <StyledInput\n        type={inputType}\n        value={val}\n        onChange={handleChange}\n        className={`custom-input ${className}`}\n        placeholder={placeholder}\n        ref={refVal}\n        defaultValue={defaultValue}\n      />\n    </InputWrapper>\n  );\n};\n\nInput.defaultProps = {\n  inputType: 'text',\n  className: '',\n  handleChange: () => undefined,\n};\n\nexport default Input;\n","import styled from 'styled-components';\n\nexport const ArtistSideBarWrapper = styled.div`\n  input {\n    border: 1px solid transparent;\n  }\n\n  .input-wrapper {\n    margin-bottom: 12px;\n  }\n\n  svg {\n    vertical-align: middle;\n    font-size: 20px;\n    margin-right: 7px;\n  }\n`;\n\nexport const Creator = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n\nexport const CreatorImageWrapper = styled.div`\n  width: 40px;\n  height: 40px;\n  margin-right: 15px;\n`;\n\nexport const CreatorImage = styled.img`\n  border-radius: 50%;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport const CreatorName = styled.span`\n  font-weight: bold;\n`;\n\nexport const Heading = styled.h4`\n  font-size: 16px;\n  font-weight: bold;\n  margin-bottom: 20px;\n`;\n\nexport const NoDataText = styled.span`\n  font-size: 10px;\n  color: red;\n  width: 90%;\n  margin: 0 auto;\n`;\n","// libraries\nimport { filter, get, map, toLower } from 'lodash';\nimport React, { useState } from 'react';\n\n// components\nimport Input from 'elements/input';\nimport Spin from 'components/spinner';\n\n// styles\nimport {\n  ArtistSideBarWrapper,\n  Creator,\n  CreatorImageWrapper,\n  CreatorImage,\n  CreatorName,\n  Heading,\n  NoDataText,\n} from './styles';\nimport { Loader } from 'pages/artGallery/styles';\nimport { RiSearchLine } from 'react-icons/ri';\n\ntype Props = {\n  artistsData: any[];\n  isArtistLoading: boolean;\n};\n\nconst ArtistSideBar: React.FunctionComponent<Props> = ({\n  artistsData,\n  isArtistLoading,\n}) => {\n  const [value, setValue] = useState('');\n\n  const filteredData = filter(artistsData, eachArtist => {\n    const text = toLower(eachArtist.name);\n    return text.includes(toLower(value));\n  });\n\n  if (isArtistLoading) {\n    return (\n      <Loader>\n        <Spin className=\"spinner-wrapper\" /> Loading...\n      </Loader>\n    );\n  }\n\n  return (\n    <ArtistSideBarWrapper>\n      <Heading>Artists</Heading>\n      <Input\n        placeholder={`Search from ${(artistsData || []).length} creators`}\n        icon={<RiSearchLine />}\n        handleChange={e => {\n          setValue(e.target.value);\n        }}\n      />\n      {!!value && !filteredData.length && (\n        <NoDataText>No Artist matches your search</NoDataText>\n      )}\n      {map(filteredData, eachItem => {\n        return (\n          <Creator key={eachItem._id}>\n            <CreatorImageWrapper>\n              <CreatorImage src={eachItem.imageUrl} />\n            </CreatorImageWrapper>\n            <CreatorName>{get(eachItem, `name`)}</CreatorName>\n          </Creator>\n        );\n      })}\n    </ArtistSideBarWrapper>\n  );\n};\n\nexport default ArtistSideBar;\n","import styled from 'styled-components';\n\nexport const FilterWrapper = styled.div`\n  width: 30%;\n`;\n\nexport const FilterItem = styled.span<{ isActive: boolean }>`\n  display: inline-block;\n  padding: 7px 12px;\n  border-radius: 20px;\n  border: 1px solid ${props => (props.isActive ? 'transparent' : '#e1e1e1')};\n  font-size: 14px;\n  font-weight: bold;\n  cursor: pointer;\n  margin-right: 15px;\n  min-width: 83px;\n  background: ${props => (props.isActive ? '#e1e1e1' : 'white')};\n  text-align: center;\n`;\n","import { FilterItem, FilterWrapper } from './styles';\n\nconst filterOptions = [\n  {\n    label: 'On Sale',\n    key: 'sale',\n  },\n  {\n    label: 'All',\n    key: null,\n  },\n];\n\ntype Props = {\n  filterHandler: (filterBy: string | null) => void;\n  activeTab: string | null;\n};\n\nconst Filter: React.FunctionComponent<Props> = props => {\n  const { filterHandler, activeTab } = props;\n\n  return (\n    <FilterWrapper>\n      {filterOptions.map((eachOption, index) => (\n        <FilterItem\n          key={index}\n          isActive={activeTab === eachOption.key}\n          onClick={() => filterHandler(eachOption.key)}\n        >\n          {eachOption.label}\n        </FilterItem>\n      ))}\n    </FilterWrapper>\n  );\n};\n\nexport default Filter;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const GalleryWrapper = styled.ul`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  grid-gap: 30px 20px;\n`;\n\nexport const ArtWrapper = styled.li`\n  position: relative;\n`;\n\nexport const ArtLink = styled(Link)`\n  text-decoration: none;\n  color: inherit;\n`;\n\nexport const GalleryImageWrapper = styled.div``;\n\nexport const GalleryImage = styled.img`\n  width: 100%;\n  height: auto;\n  object-fit: cover;\n`;\n\nexport const CreatorImageWrapper = styled.div`\n  width: 50px;\n  height: 50px;\n  min-width: 50px;\n  min-height: 50px;\n`;\n\nexport const CreatorImage = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: 50%;\n`;\n\nexport const CreatorName = styled.span`\n  display: block;\n  margin-bottom: 6px;\n  font-size: 14px;\n`;\n\nexport const ArtName = styled.span`\n  font-weight: bold;\n`;\n\nexport const Creator = styled.div`\n  display: flex;\n  margin-top: 10px;\n`;\n\nexport const Price = styled.span`\n  font-weight: bold;\n  font-size: 20px;\n  margin-top: 10px;\n  display: inline-block;\n`;\n\nexport const Details = styled.div`\n  margin-left: 10px;\n  align-self: center;\n`;\n\nexport const Status = styled.span`\n  position: absolute;\n  right: -5px;\n  background: white;\n  border-radius: 16px;\n  padding: 5px 10px;\n  top: -5px;\n  color: white;\n  font-weight: bold;\n  background: ${props => props.theme.COLOR_PALETTE.RED};\n`;\n","// libraries\nimport { get, map } from 'lodash';\nimport React from 'react';\n\n// styles\nimport {\n  GalleryWrapper,\n  ArtWrapper,\n  GalleryImageWrapper,\n  GalleryImage,\n  CreatorImageWrapper,\n  CreatorImage,\n  ArtName,\n  CreatorName,\n  Creator,\n  Price,\n  Details,\n  Status,\n  ArtLink,\n} from './styles';\n\ntype Props = {\n  artGalleryData: any[];\n};\n\nconst Gallery: React.FunctionComponent<Props> = props => {\n  const { artGalleryData } = props;\n\n  return (\n    <GalleryWrapper>\n      {map(artGalleryData, eachItem => {\n        return (\n          <ArtWrapper key={eachItem._id}>\n            <ArtLink to={`arts/${eachItem._id}`}>\n              {eachItem.status === 'sold' && <Status>Sold</Status>}\n\n              <GalleryImageWrapper>\n                <GalleryImage src={get(eachItem, `imageUrl`)} />\n              </GalleryImageWrapper>\n\n              <Creator>\n                <CreatorImageWrapper>\n                  <CreatorImage src={get(eachItem, `artist.imageUrl`)} />\n                </CreatorImageWrapper>\n                <Details>\n                  <CreatorName>{get(eachItem, `artist.name`)}</CreatorName>\n                  <ArtName>{get(eachItem, `name`)}</ArtName>\n                </Details>\n              </Creator>\n\n              <Price>${get(eachItem, `price`)}</Price>\n            </ArtLink>\n          </ArtWrapper>\n        );\n      })}\n    </GalleryWrapper>\n  );\n};\n\nexport default Gallery;\n","// libraries\nimport React, { useCallback, useEffect, useState } from 'react';\n\n// components\nimport Dropdown from 'elements/dropdown';\nimport ArtistSideBar from './components/artistsSideBar';\nimport Filter from './components/filter';\nimport Gallery from './components/gallery';\n\n// services\nimport { getArtists } from 'store/actions/artistActions';\nimport { getArts } from 'store/actions/artsActions';\nimport { useAppDispatch, useAppSelector } from 'ts/hooks';\n\n// styles\nimport {\n  Banner,\n  BannerHeading,\n  BannerText,\n  BannerWrapper,\n  HelperText,\n  ImageWrapper,\n  PageWrapper,\n  Price,\n  Image,\n  ArtGalleryWrapper,\n  SideBarWrapper,\n  GalleryWrapper,\n  Filters,\n} from './styles';\n\nconst options = [\n  {\n    value: 'high',\n    label: 'Highest Price',\n  },\n  {\n    value: 'low',\n    label: 'Lowest Price',\n  },\n];\n\nconst ArtGallery: React.FunctionComponent = () => {\n  // state\n  const [status, setStatus] = useState<string | null>(null);\n  const [sortBy, setSortBy] = useState(options[0]);\n\n  // redux\n  const dispatch = useAppDispatch();\n  const { arts, artists, isArtistLoading } = useAppSelector(state => {\n    const {\n      ArtsReducer: { arts, isArtLoading },\n      ArtistReducer: { artists, isArtistLoading },\n    } = state;\n    return {\n      arts,\n      artists,\n      isArtistLoading,\n      isArtLoading,\n    };\n  });\n\n  useEffect(() => {\n    dispatch(getArtists());\n  }, [dispatch]);\n\n  const fetchArts = useCallback(\n    (sortBy: string, filterBy: string | null) => {\n      const sort = sortBy === 'high' ? '-' : '';\n      dispatch(getArts(`${sort}price`, filterBy));\n    },\n    [dispatch]\n  );\n\n  useEffect(() => {\n    fetchArts(sortBy.value, status);\n  }, [fetchArts, sortBy.value, status]);\n\n  const filterHandler = (filterBy: string | null) => {\n    setStatus(filterBy);\n    fetchArts(sortBy.value, filterBy);\n  };\n\n  return (\n    <PageWrapper>\n      {/* Banner */}\n      <BannerWrapper>\n        <Banner />\n        <BannerText>\n          <BannerHeading>Art Title</BannerHeading>\n          <HelperText>Last Sold / 222 Sold</HelperText>\n          <Price>$2222.70</Price>\n          <ImageWrapper>\n            <Image src=\"https://via.placeholder.com/150/000000/FFFFFF/\" />\n          </ImageWrapper>\n        </BannerText>\n      </BannerWrapper>\n\n      <ArtGalleryWrapper>\n        <SideBarWrapper>\n          <ArtistSideBar\n            isArtistLoading={isArtistLoading}\n            artistsData={artists}\n          />\n        </SideBarWrapper>\n\n        <GalleryWrapper>\n          <Filters>\n            <Filter activeTab={status} filterHandler={filterHandler} />\n            <Dropdown\n              className=\"sort-container\"\n              customProps={{\n                isSearchable: false,\n                isClearable: false,\n                styles: {\n                  control: () => ({\n                    display: 'flex',\n                    border: '1px solid grey',\n                  }),\n                  option: (provided: any) => ({\n                    ...provided,\n                    fontSize: '14px',\n                  }),\n                },\n              }}\n              selectedOption={sortBy}\n              options={options}\n              handleChange={e => {\n                setSortBy(e);\n              }}\n            />\n          </Filters>\n\n          <Gallery artGalleryData={arts} />\n        </GalleryWrapper>\n      </ArtGalleryWrapper>\n    </PageWrapper>\n  );\n};\n\nexport default ArtGallery;\n"],"sourceRoot":""}